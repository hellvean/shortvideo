<template>
  <div class="tabs">
    <div class="tabs-top">
      <div class="tabs-top-name">
        分母账户统计
      </div>
    </div>
    <div class="groupinput">
      <div class="hang">
        <div class="flesx">
          <span class="qdName">书籍名称：</span>
          <Input v-model="bookName" placeholder="请输入书籍名称" class="qdselect"/>
        </div>
        <div class="flesx">
          <span class="qdName">开始时间：</span>
          <DatePicker type="datetime" v-model="startTime" @on-change="handleChange1" format="yyyy-MM-dd HH:mm"
                      placeholder="请选择开始时间"
                      class="qdselect"></DatePicker>
        </div>
        <div class="flesx">
          <span class="qdName">结束时间：</span>
          <DatePicker type="datetime" v-model="endTime" @on-change="handleChange2" format="yyyy-MM-dd HH:mm"
                      placeholder="请选择结束时间"
                      class="qdselect"></DatePicker>
        </div>
      </div>
      <div class="hang">
        <div class="flesx">
        </div>
        <div class="flesx">
        </div>
        <div class="flesx">
          <Button type="primary" class="subtj" @click="account">查询</Button>
        </div>
      </div>
    </div>
    <div class="table">
      <Table border stripe :columns="columns" :data="data"></Table>
      <div class="pagediv">
        <Page :total="tots" :page-size="limit" show-sizer :page-size-opts="sizes" :current="pages"  show-elevator show-total
              @on-change="pageChange" @on-page-size-change="pageSize"/>
      </div>
    </div>
  </div>
</template>

<script>
    export default {
        data() {
            return {
              bookName:'',
              startTime:'',
              endTime:'',
              page:1,
              pages:1,
              limit: 10,
              tots: 0,
              sizes: [10, 20, 30, 50, 80, 100],
              columns:[
                {
                  title:'书籍id',
                  key:'bookTaskId',
                  align:'center'
                },
                {
                  title:'书籍名称',
                  key:'bookName',
                  align:'center'
                },
                {
                  title:'数量',
                  key:'count',
                  align:'center'
                },
                {
                  title:'类型',
                  key:'type',
                  align:'center',
                  render: (h, params) => {
                    const row = params.row;
                    return h('div', [
                      h('span', {}, this.filter(row.type)),
                    ]);
                  }
                }
              ],
              data:[],
              tures:false,
            }
        },
        created() {
          this.account()
        },
        methods: {
          filter:function(i){
            if(i == 1){
              return '浏览';
            }else{
              return '订购'
            }
          },
          handleChange1: function (e) {
            this.startTime = e;
          },
          handleChange2: function (e) {
            this.endTime = e;
          },
          account:function () {
            if(this.tures){
              this.pages = this.page
            }else{
              this.pages = 1;
            }
            this.$http({
              method: 'get',
              url: this.url + '/v1/bookOrderTask/findFenmuRunLogList?page='+this.page+'&limit='+this.limit+'&startTime='+this.startTime+'&endTime='+this.endTime+'&bookName='+this.bookName,
              data: {},
              success: ((res) => {
                // console.log(res);
                if (res.data.code == 20000) {
                  this.data = res.data.data;
                  this.tots = res.data.count;
                  this.page =1;
                  this.tures = false;
                } else if (res.data.code == 20003) {
                  this.tots = 0;
                  this.data = [];
                  this.tures = false;
                } else if (res.data.code == 4001) {
                  this.$router.push({path: '/login'});
                } else {
                  this.$Message.warning(res.data.msg);
                }
              }),
              error: function (err) {
                console.log(err);
              },
            })
          },
          pageChange: function (e) {
            this.page = e;
            this.tures = true;
            this.account()
          },
          pageSize: function (e) {
            this.limit = e;
            this.page = 1;
            this.account()
          },
        }
    }
</script>

<style scoped lang='less'>
  .table {
    margin-top: 30px;
  }

  .groupinput {
    /*display: flex;*/
    padding-top: 20px;
    /*padding:0px 0 10px 30px;*/
  }

  .hang {
    display: flex;
    width: 100%;
    overflow: hidden;
    margin-bottom: 12px;
    .flesx {
      flex: 1;
    }
    .qdName {
      display: block;
      float: left;
      line-height: 30px;
      width: 100px;
      text-align: right;
      letter-spacing: 2px;
    }
    .qdselect, .start {
      display: block;
      float: left;
      width: 200px;
      margin-right: 30px;
    }
  }

  .pagediv {
    margin: 30px 0 0 30px;
  }

  .ivu-input {
    width: 100% !important;
  }

  .tabs {
    width: 100%;
    height: 100%;
    background-color: #f6f6f6;
    padding: 10px;
    .tabs-top {
      width: 100%;
      height: 50px;
      line-height: 40px;
      border-bottom: 1px solid #cccccc;
      margin-bottom: 10px;
      .tabs-top-name {
        font-size: 18px;
        float: left;
      }
      .tabs-top-addTask {
        float: right;
      }
    }
  }

  .table-task {
    .task-cz {
      margin-bottom: 8px;
      .task-cz-name {
        width: 100px;
        text-align: right;
        display: inline-block;
      }
    }
  }
</style>
